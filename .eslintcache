[{"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/index.js":"1","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/App.js":"2","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/Routes.js":"3","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/messageService.js":"4","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/sdkService.js":"5","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/TokenModal.js":"6","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/MessageListener.js":"7","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/Home.js":"8","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/PasswordlessLogin.js":"9","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CompleteLoginChallenge.js":"10","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/Signup.js":"11","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ConfirmSignup.js":"12","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ConfirmResetPassword.js":"13","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ConfirmChangeUsername.js":"14","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ResetPassword.js":"15","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/SignupWithDid.js":"16","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/NotFound.js":"17","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ChangeUsername.js":"18","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/Login.js":"19","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ChangePassword.js":"20","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/config.js":"21","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/components/AppliedRoute.js":"22","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CredentialOfferRequestModal.js":"23","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CredentialShareModal.js":"24","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/components/ExpandArea.js":"25","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/decodeEnv.js":"26","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/vendors/CredentialCard.js":"27","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/DeleteCredentialModal.js":"28","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CreateVerifiablePresentationModal.js":"29","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/apiService.js":"30"},{"size":253,"mtime":1608753831978,"results":"31","hashOfConfig":"32"},{"size":21523,"mtime":1608750619922,"results":"33","hashOfConfig":"32"},{"size":2304,"mtime":1608747032458,"results":"34","hashOfConfig":"32"},{"size":3024,"mtime":1608747032467,"results":"35","hashOfConfig":"32"},{"size":8930,"mtime":1609275834278,"results":"36","hashOfConfig":"32"},{"size":2410,"mtime":1608748843754,"results":"37","hashOfConfig":"32"},{"size":3621,"mtime":1608747032464,"results":"38","hashOfConfig":"32"},{"size":13688,"mtime":1609255700554,"results":"39","hashOfConfig":"32"},{"size":1629,"mtime":1609262425157,"results":"40","hashOfConfig":"32"},{"size":1659,"mtime":1609262726496,"results":"41","hashOfConfig":"32"},{"size":3825,"mtime":1609257420462,"results":"42","hashOfConfig":"32"},{"size":3433,"mtime":1609257391288,"results":"43","hashOfConfig":"32"},{"size":2270,"mtime":1608747032461,"results":"44","hashOfConfig":"32"},{"size":1465,"mtime":1608747032460,"results":"45","hashOfConfig":"32"},{"size":1598,"mtime":1608747032465,"results":"46","hashOfConfig":"32"},{"size":2438,"mtime":1608747032466,"results":"47","hashOfConfig":"32"},{"size":188,"mtime":1608747032464,"results":"48","hashOfConfig":"32"},{"size":1527,"mtime":1608747032460,"results":"49","hashOfConfig":"32"},{"size":2318,"mtime":1608747032464,"results":"50","hashOfConfig":"32"},{"size":1462,"mtime":1608747032459,"results":"51","hashOfConfig":"32"},{"size":767,"mtime":1609277301556,"results":"52","hashOfConfig":"32"},{"size":234,"mtime":1608747032458,"results":"53","hashOfConfig":"32"},{"size":5160,"mtime":1608747032462,"results":"54","hashOfConfig":"32"},{"size":7981,"mtime":1608747032462,"results":"55","hashOfConfig":"32"},{"size":2060,"mtime":1608747032459,"results":"56","hashOfConfig":"32"},{"size":370,"mtime":1608764209085,"results":"57","hashOfConfig":"32"},{"size":3730,"mtime":1608749015272,"results":"58","hashOfConfig":"32"},{"size":842,"mtime":1608747032463,"results":"59","hashOfConfig":"32"},{"size":3458,"mtime":1608747032461,"results":"60","hashOfConfig":"32"},{"size":801,"mtime":1609273741257,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1muy8vu",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/index.js",[],["126","127"],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/App.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/Routes.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/messageService.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/sdkService.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/TokenModal.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/MessageListener.js",["128","129"],"import JwtService from \"@affinidi/common/dist/services/JwtService\";\nimport React, { useEffect, useState } from \"react\";\nimport { format } from \"timeago.js\";\nimport { Alert } from \"react-bootstrap\";\nimport {useTokenModal} from \"./TokenModal\";\n\nconst KNOWN_TOKEN_TYPS = [\"credentialOfferRequest\", \"credentialRequest\"];\nconst INTERVAL_MS = 10 * 1000;\n\nconst handleError = (func) => async () => {\n    try {\n        await func();\n    } catch (err) {\n        console.error(err);\n    }\n};\n\nfunction parseTokenTyp(token) {\n    try {\n        const { payload } = JwtService.fromJWT(token);\n\n        return payload.typ;\n    } catch (err) {\n        return undefined;\n    }\n}\n\nconst MessageList = ({ messageList, onClick, onClose }) => {\n    return (\n        <div\n            style={{\n                position: \"absolute\",\n                top: 100,\n                right: 200,\n                zIndex: 999,\n            }}\n        >\n            {messageList.map((msg) => (\n                <Alert key={msg.id} onDismiss={() => onClose(msg)}>\n                    <h4>Message ({format(msg.createdAt, \"en_US\")})</h4>\n                    <a\n                        href=\"javascript:void(0);\"\n                        onClick={() => onClick(msg)}\n                        style={{ textDecoration: \"inherit\", color: \"inherit\" }}\n                    >\n                        <p>\n                            You have a message of type <b>{msg.typ}</b>. Click to process.\n                        </p>\n                    </a>\n                </Alert>\n            ))}\n        </div>\n    );\n};\n\nconst MessageListener = () => {\n    const { open } = useTokenModal()\n\n    const [messageList, setMessageList] = useState([]);\n    const [removedMessages, setRemovedMessages] = useState([]);\n\n    useEffect(() => {\n        const handle = window.setInterval(\n            handleError(async () => {\n                const messageService = window.messageService\n                if (!messageService) { return }\n\n                const messages = await messageService.getAll();\n                if (!Array.isArray(messages) || messages.length <= 0) {\n                    setMessageList([]);\n                    return;\n                }\n\n                setMessageList(\n                    messages\n                        .map((msg) => ({\n                            ...msg,\n                            createdAt: new Date(msg.createdAt),\n                            typ: parseTokenTyp(msg.message.token),\n                        }))\n                        .filter(({ typ }) => KNOWN_TOKEN_TYPS.includes(typ))\n                        .sort(({ createdAt: a }, { createdAt: b }) => b - a)\n                );\n            }),\n            INTERVAL_MS\n        );\n\n        return () => {\n            window.clearInterval(handle);\n        };\n    }, []);\n\n    return (\n        <MessageList\n            messageList={messageList.filter(\n                ({ id }) => !removedMessages.includes(id)\n            )}\n            onClick={async (msg) => {\n                setRemovedMessages([\n                    ...removedMessages.filter((id) => msg.id !== id),\n                    msg.id,\n                ]);\n\n                open(msg.message.token)\n\n                window.messageService.delete(msg.id).catch(console.error);\n            }}\n            onClose={async (msg) => {\n                setRemovedMessages([\n                    ...removedMessages.filter((id) => msg.id !== id),\n                    msg.id,\n                ]);\n\n                window.messageService.delete(msg.id).catch(console.error);\n            }}\n        />\n    );\n};\n\nexport default MessageListener;\n\n","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/Home.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/PasswordlessLogin.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CompleteLoginChallenge.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/Signup.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ConfirmSignup.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ConfirmResetPassword.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ConfirmChangeUsername.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ResetPassword.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/SignupWithDid.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/NotFound.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ChangeUsername.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/Login.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/ChangePassword.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/config.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/components/AppliedRoute.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CredentialOfferRequestModal.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CredentialShareModal.js",["130","131"],"import React, {useEffect, useState} from \"react\";\nimport {Alert, Table, Button, ControlLabel, FormControl, Checkbox, FormGroup, Modal} from \"react-bootstrap\";\nimport {useAsync, useAsyncFn} from \"react-use\";\nimport {useTokenModal} from \"./TokenModal\";\n\nfunction parseInfoFromToken(token) {\n    try {\n        const { payload } = window.sdk.parseToken(token)\n        const callbackURL = (payload.interactionToken || {}).callbackURL || undefined\n        const requesterDid = payload.iss\n\n        return { requesterDid, callbackURL }\n    } catch(err) {\n        return {}\n    }\n}\n\nasync function getCredentials(credentialShareRequestToken) {\n    const credentials = await window.sdk.getCredentials(credentialShareRequestToken)\n\n    if (!Array.isArray(credentials) || credentials.length < 1) {\n        throw new Error('No credential found for this request!')\n    }\n\n    return credentials\n}\n\nasync function createCredentialShareResponseToken(credentialShareRequestToken, credentials, requesterDid, shouldSendMessage) {\n    const credentialShareResponseToken = await window.sdk.createCredentialShareResponseToken(credentialShareRequestToken, credentials)\n    const verifiablePresentation = await window.sdk.createPresentationFromChallenge(credentialShareRequestToken, credentials, 'domain')\n\n    if (shouldSendMessage && requesterDid) {\n        await window.messageService.send(requesterDid, { token: credentialShareResponseToken })\n    }\n\n    return { credentialShareResponseToken, verifiablePresentation }\n}\n\nasync function sendVPToCallback(callbackURL, { verifiablePresentation }) {\n    const response = await fetch(callbackURL, {\n        method: 'POST',\n        // mode: 'no-cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ vp: verifiablePresentation })\n    })\n\n    if (response.status < 200 || response.status > 299) {\n        throw new Error(`${callbackURL} responded with ${response.statusText}`)\n    }\n\n    if (response.status === 204) {\n        return undefined\n    }\n\n    return response.json()\n}\n\nexport const CredentialShareModal = ({ credentialShareRequestToken, onClose }) => {\n    const { open: openTokenModal } = useTokenModal()\n    const { requesterDid, callbackURL } = parseInfoFromToken(credentialShareRequestToken)\n\n    const [shouldSendMessage, setShouldSendMessage] = useState(true);\n\n    const { loading: credentialsLoading, value: credentials, error: credentialsError } = useAsync(\n        () => getCredentials(credentialShareRequestToken),\n        [credentialShareRequestToken]\n    )\n    const [\n        { loading: createVPLoading, value: presentation, error: createVPError },\n        onCreateVP\n    ] = useAsyncFn(\n        () => createCredentialShareResponseToken(credentialShareRequestToken, credentials, requesterDid, shouldSendMessage),\n        [credentialShareRequestToken, credentials, requesterDid, shouldSendMessage]\n    );\n\n    const [{ loading: callbackLoading, value: callbackResponse, error: callbackError }, sendVP] = useAsyncFn(\n        () => sendVPToCallback(callbackURL, presentation),\n        [callbackURL, presentation]\n    )\n\n    useEffect(() => {\n        if (callbackURL && presentation) {\n            sendVP()\n        }\n    }, [callbackURL, presentation, sendVP])\n\n    const shareButtonDisabled = credentialsLoading || !!credentialsError || credentials.length < 1 || createVPLoading || callbackLoading || !!presentation\n    const alert = getAlert(callbackURL, callbackLoading, callbackResponse, callbackError, credentialsError, createVPError)\n\n    useEffect(() => {\n        if (callbackResponse && callbackResponse.requestToken) {\n            const { requestToken } = callbackResponse\n\n            openTokenModal(requestToken)\n        }\n    }, [callbackResponse, openTokenModal, onClose])\n\n    return (\n        <Modal\n            show={credentialShareRequestToken !== undefined}\n            onHide={onClose}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Share Credentials</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <FormGroup controlId='credentialShareRequestToken' bsSize='large'>\n                    <ControlLabel>Credential Share Request Token</ControlLabel>\n                    <FormControl\n                        readOnly\n                        type='text'\n                        value={credentialShareRequestToken}\n                    />\n                </FormGroup>\n                <FormGroup controlId='requesterDid' bsSize='large'>\n                    <ControlLabel>Requester Did</ControlLabel>\n                    <FormControl\n                        readOnly\n                        type='text'\n                        value={requesterDid || '-'}\n                    />\n                </FormGroup>\n                <FormGroup controlId='credentials' bsSize='large'>\n                    <ControlLabel>Credentials</ControlLabel>\n                    <Table striped bordered hover size='sm'>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>id</th>\n                                <th>type</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {(credentials || []).map((credential, idx) => (\n                              <tr key={credential.id}>\n                                  <td>{idx + 1}</td>\n                                  <td>{credential.id}</td>\n                                  <td>{JSON.stringify(credential.type)}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </FormGroup>\n                <FormGroup>\n                    <Button bsSize='large' disabled={shareButtonDisabled} onClick={onCreateVP}>\n                        Accept\n                    </Button>\n                    <Checkbox\n                        inline\n                        disabled={shareButtonDisabled}\n                        checked={shouldSendMessage}\n                        onClick={() => setShouldSendMessage(!shouldSendMessage)}\n                        style={{ marginLeft: 10 }}\n                    >Send token to verifier</Checkbox>\n                </FormGroup>\n                <FormGroup controlId='presentation' bsSize='large'>\n                    <ControlLabel>Credential Share Response Token</ControlLabel>\n                    <FormControl\n                        readOnly\n                        type='text'\n                        value={createVPLoading ? '-' : presentation && presentation.credentialShareResponseToken || ''}\n                    />\n                </FormGroup>\n                {alert &&\n                    <FormGroup>\n                        <Alert bsStyle={alert.bsStyle} children={alert.message} />\n                    </FormGroup>\n                }\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nfunction getAlert(callbackURL, callbackLoading, callbackResponse, callbackError, credentialsError, createVPError) {\n    if (callbackURL && (callbackLoading || callbackResponse || callbackError)) {\n        if (callbackLoading) {\n            return { message: 'Sending VP to callbackURL.', bsStyle: 'warning' }\n        }\n\n        if (callbackResponse) {\n            return { message: 'Sent VP to callbackURL successfully.', bsStyle: 'success' }\n        }\n\n        if (callbackError) {\n            return { message: `There was an error sending VP to callbackURL. Error: ${callbackError.message}`, bsStyle: 'danger' }\n        }\n    }\n\n    if (credentialsError) {\n        return { message: `Could not list credentials. Error: ${credentialsError.message}`, bsStyle: 'danger' }\n    }\n\n    if (createVPError) {\n        return { message: `Could not create VP. Error: ${createVPError.message}`, bsStyle: 'danger' }\n    }\n\n    return undefined\n}\n","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/components/ExpandArea.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/decodeEnv.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/vendors/CredentialCard.js",["132"],"import React, {useEffect, useState} from \"react\";\n\nimport './CredentialCard.css'\n\nexport default function CredentialCard(props) {\n    const [backgroundColor, setBackgroundColor] = useState('')\n\n    const credential = props.credential\n    const credentialType = credential.type.join(', ')\n    const issuanceDate = new Date(credential.issuanceDate).toLocaleString('en-GB', { timeZone: 'UTC' })\n\n    let expirationDate\n    if (credential.expirationDate) expirationDate = new Date(credential.expirationDate).toLocaleString('en-GB', { timeZone: 'UTC' })\n\n    useEffect(() => {\n        const script = document.createElement('script');\n\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/seedrandom/2.3.10/seedrandom.min.js';\n\n        document.body.appendChild(script);\n\n        setTimeout(() => {\n            setBackgroundColor(color())\n        }, 200)\n\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, [])\n\n    function color() {\n        Math.seedrandom(credentialType)\n        const rand = (Math.random() * 10).toFixed(0)\n\n        switch (rand) {\n            case '1':\n                return 'Green'\n            case '2':\n                return 'Blue'\n            case '3':\n                return 'Mint'\n            case '4':\n                return 'Orange'\n            case '5':\n                return 'Burgundy'\n            case '6':\n                return 'Brown'\n            case '7':\n                return 'Gray'\n            case '8':\n                return 'Gold'\n            case '9':\n                return 'Gray'\n            default:\n                return 'Default'\n        }\n    }\n\n    return (\n        <div\n            className={`\n                Card\n                ${backgroundColor}\n            `}\n        >\n            <div className='Header'>\n                <p className='Type'>{ credentialType }</p>\n                <p className='ID'>{ credential.id }</p>\n            </div>\n            <div className='Values'>\n                {\n                    Object.entries(credential.credentialSubject.data).map(([key, value]) => {\n                        if (Array.isArray(value) && key === '@type') {\n                            return <p className='Value' key={key}>{key}: {value.join(', ')}</p>\n                        }\n\n                        if (typeof value === 'object') {\n                            return (\n                                <div className='TextareaContainer' key={key}>\n                                    <p className='Value'>{key}</p>\n                                    <textarea className={`Textarea ${backgroundColor}`} key={key} readOnly name='credentials' rows='8' value={JSON.stringify(value, undefined, '\\t')}/>\n                                </div>\n                            )\n                        }\n\n                        return <p className='Value' key={key}>{key}: {value}</p>\n                    })\n                }\n            </div>\n            <div className='Footer'>\n                <p className='IssuanceDate'>Created: { issuanceDate }</p>\n                { expirationDate &&\n                    <p className='ExpirationDate'>Expire: { expirationDate }</p>\n                }\n                <div className='Issuer-Holder'>\n                    <div className='Issuer-Container'>\n                        <p className='Issuer'>Issuer:</p>\n                        <p className='Issuer'>{ credential.issuer }</p>\n                    </div>\n                    <div className='Holder-Container'>\n                        <p className='Holder'>Holder:</p>\n                        <p className='Holder'>{ credential.holder.id }</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/DeleteCredentialModal.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/containers/CreateVerifiablePresentationModal.js",[],"/Users/afshanaman/Development/affinity-project/affinidi/affinidi-demo-browser-app/src/utils/apiService.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":41,"column":21,"nodeType":"139","endLine":45,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":42,"column":30,"nodeType":"142","messageId":"143","endLine":42,"endColumn":51},{"ruleId":"144","severity":1,"message":"145","line":165,"column":69,"nodeType":"146","messageId":"147","endLine":165,"endColumn":71},{"ruleId":"144","severity":1,"message":"145","line":165,"column":114,"nodeType":"146","messageId":"147","endLine":165,"endColumn":116},{"ruleId":"148","severity":1,"message":"149","line":29,"column":8,"nodeType":"150","endLine":29,"endColumn":10,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'color'. Either include it or remove the dependency array.","ArrayExpression",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [color]",{"range":"157","text":"158"},[945,947],"[color]"]